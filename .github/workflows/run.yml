name: Run Decoder

on:
  push:
    branches: [main]  # or [cisco-fix] if thatâ€™s your working branch
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  run-decoder:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          tags: decoder-image:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Create output directories
        run: |
          mkdir -p ${{ github.workspace }}/results
          chmod -R 777 ${{ github.workspace }}/results

      - name: Download Cisco Dataset
        run: |
          wget https://snap.stanford.edu/data/cisco-secure-workload.zip -O cisco.zip || wget https://snap.stanford.edu/data/CiscoSecureWorkload_22_networks.zip -O cisco.zip
          mkdir -p data/cisco
          unzip cisco.zip -d data/cisco
          ls -la data/cisco/

      - name: Run decoder in Docker container
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            -e PYTHONUNBUFFERED=1 \
            decoder-image:latest \
            bash -c "
              set -e
              echo 'Starting decoder run on Cisco dataset...'
              python -m subgraph_mining.decoder \
                --dataset=cisco \
                --node_anchored \
                --min_pattern_size=3 \
                --max_pattern_size=5 \
                --out_path=/app/results/patterns.pkl
              echo 'Decoder completed. Listing output...'
              ls -la /app/results
            "

      - name: Run pattern counter in Docker container
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            -e PYTHONUNBUFFERED=1 \
            decoder-image:latest \
            bash -c "
              set -e
              export PYTHONPATH=/app
              echo 'Running pattern counter...'
              python -m analyze.count_patterns \
                --dataset=cisco \
                --queries_path=/app/results/patterns.pkl \
                --out_path=/app/results/counts.json \
                --node_anchored
              echo 'Counting completed.'
              ls -la /app/results
            "

      - name: Run pattern analysis in Docker container
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            -e PYTHONUNBUFFERED=1 \
            decoder-image:latest \
            bash -c "
              set -e
              export PYTHONPATH=/app
              echo 'Running pattern analysis...'
              python -m analyze.analyze_pattern_counts \
                --counts_path=/app/results/
              echo 'Analysis completed.'
              ls -la /app/results
            "

      - name: Check for generated files
        run: |
          echo "Checking results directory:"
          ls -R results/ || echo "No results directory found"

      - name: Upload results as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: spminer-results
          path: |
            results/
            data/cisco/
          retention-days: 7
          if-no-files-found: warn
